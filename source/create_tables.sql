BEGIN;

CREATE SCHEMA bioacustica;

CREATE TABLE IF NOT EXISTS bioacustica.FUNDING
(
    ID_FUNDING SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_FUNDING)
);

CREATE TABLE IF NOT EXISTS bioacustica.PROJECT
(
    ID_PROJECT SERIAL,
    ID_FUNDING integer NOT NULL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_PROJECT)
);

CREATE TABLE IF NOT EXISTS bioacustica.SEASON
(
    ID_SEASON SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_SEASON)
);


CREATE TABLE IF NOT EXISTS bioacustica.SAMPLING
(
    ID_SAMPLING SERIAL,
    ID_PROJECT integer NOT NULL,
    ID_CATALOGER integer NOT NULL,
    ID_SEASON integer NOT NULL,
    DATE timestamp without time zone,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_SAMPLING)
);

CREATE TABLE IF NOT EXISTS bioacustica.USER
(
    ID_USER SERIAL,
    NAME character varying(100),
    EMAIL character varying(100),
    PRIMARY KEY (ID_USER)
);

CREATE TABLE IF NOT EXISTS bioacustica.TYPE
(
    ID_TYPE SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_TYPE)
);

    CREATE TABLE IF NOT EXISTS bioacustica.LABEL
(
    ID_LABEL SERIAL,
    ID_TYPE integer NOT NULL,
    PRIMARY KEY (ID_LABEL)
);

CREATE TABLE IF NOT EXISTS bioacustica.EVIDENCE
(
    ID_EVIDENCE SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_EVIDENCE)
);

CREATE TABLE bioacustica.PRECISION
(
    ID_PRECISION SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_PRECISION)
);

CREATE TABLE IF NOT EXISTS bioacustica.DATUM
(
    ID_DATUM SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_DATUM)
);

CREATE TABLE IF NOT EXISTS bioacustica.FORMAT
(
    ID_FORMAT SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_FORMAT)
);

CREATE TABLE IF NOT EXISTS bioacustica.RECORD_OBS
(
    ID_RECORD_OBS SERIAL,
    ID_RECORD integer NOT NULL,
    OBSERVATION character varying(100),
    PRIMARY KEY (ID_RECORD_OBS)
);

CREATE TABLE IF NOT EXISTS bioacustica.CATALOGUE_OBS
(
    ID_CATALOGUE_OBS SERIAL,
    ID_CATALOGUE integer NOT NULL,
    OBSERVATION character varying(100),
    PRIMARY KEY (ID_CATALOGUE_OBS)
);

CREATE TABLE IF NOT EXISTS bioacustica.HABITAT
(
    ID_HABITAT SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_HABITAT)
);

CREATE TABLE IF NOT EXISTS bioacustica.MEMORY
(
    ID_MEMORY SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_MEMORY)
);

CREATE TABLE IF NOT EXISTS bioacustica.CASE
(
    ID_CASE SERIAL,
    DESCRIPTION character varying(100),
    PRIMARY KEY (ID_CASE)
);

CREATE TABLE IF NOT EXISTS bioacustica.SUPPLY
(
    ID_SUPPLY SERIAL,
    DESCRIPTION character varying,
    PRIMARY KEY (ID_SUPPLY)
);

CREATE TABLE IF NOT EXISTS bioacustica.HARDWARE
(
    ID_HARDWARE SERIAL,
    DESCRIPTION character varying,
    PRIMARY KEY (ID_HARDWARE)
);

CREATE TABLE IF NOT EXISTS bioacustica.LABELED
(
    ID_LABELED SERIAL,
    ID_LABEL integer NOT NULL,
    ID_RECORD integer NOT NULL,
    ID_EVIDENCE integer NOT NULL,
    ID_LABELER integer NOT NULL,
    BEGIN integer,
    LABEL_END integer,
    PRIMARY KEY (ID_LABELED)
);

CREATE TABLE IF NOT EXISTS bioacustica.RECORD
(
    ID_RECORD SERIAL,
    ID_CATALOGUE integer NOT NULL,
    ID_FORMAT integer NOT NULL,
    DATE timestamp without time zone,
    LENGTH integer,
    SIZE real,
    SAMPLE_RATE integer,
    CHUNK integer,
    CHANNELS integer,
    PRIMARY KEY (ID_RECORD)
);

CREATE TABLE IF NOT EXISTS bioacustica.CATALOGUE
(
    ID_CATALOGUE SERIAL,
    ID_SAMPLING integer NOT NULL,
    ID_COUNTRY integer NOT NULL,
    ID_DEPARTMENT integer NOT NULL,
    ID_MUNICIPALITY integer NOT NULL,
    ID_VEREDA integer NOT NULL,
    ID_LOCALITY integer NOT NULL,
    ID_GAIN integer NOT NULL,
    ID_FILTERS integer NOT NULL,
    ID_COLLECTOR integer NOT NULL,
    ID_H_SERIAL integer NOT NULL,
    ID_SUPPLY integer NOT NULL,
    ID_CASE integer NOT NULL,
    ID_MEMORY integer NOT NULL,
    ID_HABITAT integer NOT NULL,
    ID_PRECISION integer NOT NULL,
    ID_DATUM integer NOT NULL,
    ELEVATION integer,
    COORDINATES point,
    HEIGHT integer,
    CHUNKS integer,
    SIZE real,
    PRIMARY KEY (ID_CATALOGUE)
);

CREATE TABLE IF NOT EXISTS bioacustica.RECORD_PATH
(
    ID_RECORD_PATH SERIAL,
    ID_RECORD INT NOT NULL,
    RECORD_PATH character varying(100),
    FINGERPRINT character varying(100),
    PRIMARY KEY (ID_RECORD_PATH)
);

CREATE TABLE IF NOT EXISTS bioacustica.H_SERIAL
(
    ID_H_SERIAL SERIAL,
    ID_HARDWARE INT NOT NULL,
    H_SERIAL character varying(64),
    PRIMARY KEY (ID_H_SERIAL)
);


CREATE TABLE IF NOT EXISTS bioacustica.PHOTO_PATH
(
    ID_PHOTO_PATH SERIAL,
    ID_CATALOGUE  INT UNIQUE NOT NULL,
    PATH character varying(100),
    PRIMARY KEY (ID_PHOTO_PATH)
);


ALTER TABLE bioacustica.PROJECT
    ADD FOREIGN KEY (ID_FUNDING)
    REFERENCES bioacustica.FUNDING (ID_FUNDING)
    NOT VALID;


ALTER TABLE bioacustica.SAMPLING
    ADD FOREIGN KEY (ID_CATALOGER)
    REFERENCES bioacustica.USER (ID_USER)
    NOT VALID;


ALTER TABLE bioacustica.SAMPLING
    ADD FOREIGN KEY (ID_PROJECT)
    REFERENCES bioacustica.PROJECT (ID_PROJECT)
    NOT VALID;


ALTER TABLE bioacustica.SAMPLING
    ADD FOREIGN KEY (ID_SEASON)
    REFERENCES bioacustica.SEASON (ID_SEASON)
    NOT VALID;


ALTER TABLE bioacustica.LABEL
    ADD FOREIGN KEY (ID_TYPE)
    REFERENCES bioacustica.TYPE (ID_TYPE)
    NOT VALID;


ALTER TABLE bioacustica.LABELED
    ADD FOREIGN KEY (ID_LABEL)
    REFERENCES bioacustica.LABEL (ID_LABEL)
    NOT VALID;


ALTER TABLE bioacustica.LABELED
    ADD FOREIGN KEY (ID_RECORD)
    REFERENCES bioacustica.RECORD (ID_RECORD)
    NOT VALID;


ALTER TABLE bioacustica.LABELED
    ADD FOREIGN KEY (ID_EVIDENCE)
    REFERENCES bioacustica.EVIDENCE (ID_EVIDENCE)
    NOT VALID;


ALTER TABLE bioacustica.LABELED
    ADD FOREIGN KEY (ID_LABELER)
    REFERENCES bioacustica.USER (ID_USER)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_SAMPLING)
    REFERENCES bioacustica.SAMPLING (ID_SAMPLING)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_COLLECTOR)
    REFERENCES bioacustica.USER (ID_USER)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_H_SERIAL)
    REFERENCES bioacustica.H_SERIAL (ID_H_SERIAL)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_SUPPLY)
    REFERENCES bioacustica.SUPPLY (ID_SUPPLY)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_CASE)
    REFERENCES bioacustica.CASE (ID_CASE)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_MEMORY)
    REFERENCES bioacustica.MEMORY (ID_MEMORY)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_HABITAT)
    REFERENCES bioacustica.HABITAT (ID_HABITAT)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_PRECISION)
    REFERENCES bioacustica.PRECISION (ID_PRECISION)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE
    ADD FOREIGN KEY (ID_DATUM)
    REFERENCES bioacustica.DATUM (ID_DATUM)
    NOT VALID;


ALTER TABLE bioacustica.RECORD
    ADD FOREIGN KEY (ID_FORMAT)
    REFERENCES bioacustica.FORMAT (ID_FORMAT)
    NOT VALID;


ALTER TABLE bioacustica.RECORD
    ADD FOREIGN KEY (ID_CATALOGUE)
    REFERENCES bioacustica.CATALOGUE (ID_CATALOGUE)
    NOT VALID;


ALTER TABLE bioacustica.RECORD_PATH
    ADD FOREIGN KEY (ID_RECORD)
    REFERENCES bioacustica.RECORD (ID_RECORD)
    NOT VALID;


ALTER TABLE bioacustica.RECORD_OBS
    ADD FOREIGN KEY (ID_RECORD)
    REFERENCES bioacustica.RECORD (ID_RECORD)
    NOT VALID;


ALTER TABLE bioacustica.H_SERIAL
    ADD FOREIGN KEY (ID_HARDWARE)
    REFERENCES bioacustica.HARDWARE (ID_HARDWARE)
    NOT VALID;


ALTER TABLE bioacustica.CATALOGUE_OBS
    ADD FOREIGN KEY (ID_CATALOGUE)
    REFERENCES bioacustica.CATALOGUE (ID_CATALOGUE)
    NOT VALID;


ALTER TABLE bioacustica.PHOTO_PATH
    ADD FOREIGN KEY (ID_CATALOGUE)
    REFERENCES bioacustica.CATALOGUE (ID_CATALOGUE)
    NOT VALID;

END;