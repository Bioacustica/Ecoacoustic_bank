{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nvar _require = require('postcss'),\n    list = _require.list;\n\nvar OldSelector = require('./old-selector');\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Selector = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Selector, _Prefixer);\n\n  function Selector(name, prefixes, all) {\n    var _this;\n\n    _this = _Prefixer.call(this, name, prefixes, all) || this;\n    _this.regexpCache = {};\n    return _this;\n  }\n  /**\n     * Is rule selectors need to be prefixed\n     */\n\n\n  var _proto = Selector.prototype;\n\n  _proto.check = function check(rule) {\n    if (rule.selector.includes(this.name)) {\n      return !!rule.selector.match(this.regexp());\n    }\n\n    return false;\n  }\n  /**\n     * Return prefixed version of selector\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prefix) {\n    return this.name.replace(/^(\\W*)/, \"$1\" + prefix);\n  }\n  /**\n     * Lazy loadRegExp for name\n     */\n  ;\n\n  _proto.regexp = function regexp(prefix) {\n    if (this.regexpCache[prefix]) {\n      return this.regexpCache[prefix];\n    }\n\n    var name = prefix ? this.prefixed(prefix) : this.name;\n    this.regexpCache[prefix] = new RegExp(\"(^|[^:\\\"'=])\" + utils.escapeRegexp(name), 'gi');\n    return this.regexpCache[prefix];\n  }\n  /**\n     * All possible prefixes\n     */\n  ;\n\n  _proto.possible = function possible() {\n    return Browsers.prefixes();\n  }\n  /**\n     * Return all possible selector prefixes\n     */\n  ;\n\n  _proto.prefixeds = function prefixeds(rule) {\n    var _this2 = this;\n\n    if (rule._autoprefixerPrefixeds) {\n      if (rule._autoprefixerPrefixeds[this.name]) {\n        return rule._autoprefixerPrefixeds;\n      }\n    } else {\n      rule._autoprefixerPrefixeds = {};\n    }\n\n    var prefixeds = {};\n\n    if (rule.selector.includes(',')) {\n      var ruleParts = list.comma(rule.selector);\n      var toProcess = ruleParts.filter(function (el) {\n        return el.includes(_this2.name);\n      });\n\n      var _loop = function _loop() {\n        var prefix = _step.value;\n        prefixeds[prefix] = toProcess.map(function (el) {\n          return _this2.replace(el, prefix);\n        }).join(', ');\n      };\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.possible()), _step; !(_step = _iterator()).done;) {\n        _loop();\n      }\n    } else {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.possible()), _step2; !(_step2 = _iterator2()).done;) {\n        var prefix = _step2.value;\n        prefixeds[prefix] = this.replace(rule.selector, prefix);\n      }\n    }\n\n    rule._autoprefixerPrefixeds[this.name] = prefixeds;\n    return rule._autoprefixerPrefixeds;\n  }\n  /**\n     * Is rule already prefixed before\n     */\n  ;\n\n  _proto.already = function already(rule, prefixeds, prefix) {\n    var index = rule.parent.index(rule) - 1;\n\n    while (index >= 0) {\n      var before = rule.parent.nodes[index];\n\n      if (before.type !== 'rule') {\n        return false;\n      }\n\n      var some = false;\n\n      for (var key in prefixeds[this.name]) {\n        var prefixed = prefixeds[this.name][key];\n\n        if (before.selector === prefixed) {\n          if (prefix === key) {\n            return true;\n          } else {\n            some = true;\n            break;\n          }\n        }\n      }\n\n      if (!some) {\n        return false;\n      }\n\n      index -= 1;\n    }\n\n    return false;\n  }\n  /**\n     * Replace selectors by prefixed one\n     */\n  ;\n\n  _proto.replace = function replace(selector, prefix) {\n    return selector.replace(this.regexp(), \"$1\" + this.prefixed(prefix));\n  }\n  /**\n     * Clone and add prefixes for at-rule\n     */\n  ;\n\n  _proto.add = function add(rule, prefix) {\n    var prefixeds = this.prefixeds(rule);\n\n    if (this.already(rule, prefixeds, prefix)) {\n      return;\n    }\n\n    var cloned = this.clone(rule, {\n      selector: prefixeds[this.name][prefix]\n    });\n    rule.parent.insertBefore(rule, cloned);\n  }\n  /**\n     * Return function to fast find prefixed selector\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldSelector(this, prefix);\n  };\n\n  return Selector;\n}(Prefixer);\n\nmodule.exports = Selector;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/selector.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","done","TypeError","next","bind","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","_inheritsLoose","subClass","superClass","create","_require","require","list","OldSelector","Prefixer","Browsers","utils","Selector","_Prefixer","prefixes","all","_this","regexpCache","_proto","check","rule","selector","includes","match","regexp","prefixed","prefix","replace","RegExp","escapeRegexp","possible","prefixeds","_this2","_autoprefixerPrefixeds","ruleParts","comma","toProcess","filter","el","_loop","_step","map","join","_iterator","_iterator2","_step2","already","index","parent","before","nodes","type","some","add","cloned","clone","insertBefore","old","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar _require = require('postcss'),\n    list = _require.list;\n\nvar OldSelector = require('./old-selector');\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Selector = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Selector, _Prefixer);\n\n  function Selector(name, prefixes, all) {\n    var _this;\n\n    _this = _Prefixer.call(this, name, prefixes, all) || this;\n    _this.regexpCache = {};\n    return _this;\n  }\n  /**\n     * Is rule selectors need to be prefixed\n     */\n\n\n  var _proto = Selector.prototype;\n\n  _proto.check = function check(rule) {\n    if (rule.selector.includes(this.name)) {\n      return !!rule.selector.match(this.regexp());\n    }\n\n    return false;\n  }\n  /**\n     * Return prefixed version of selector\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prefix) {\n    return this.name.replace(/^(\\W*)/, \"$1\" + prefix);\n  }\n  /**\n     * Lazy loadRegExp for name\n     */\n  ;\n\n  _proto.regexp = function regexp(prefix) {\n    if (this.regexpCache[prefix]) {\n      return this.regexpCache[prefix];\n    }\n\n    var name = prefix ? this.prefixed(prefix) : this.name;\n    this.regexpCache[prefix] = new RegExp(\"(^|[^:\\\"'=])\" + utils.escapeRegexp(name), 'gi');\n    return this.regexpCache[prefix];\n  }\n  /**\n     * All possible prefixes\n     */\n  ;\n\n  _proto.possible = function possible() {\n    return Browsers.prefixes();\n  }\n  /**\n     * Return all possible selector prefixes\n     */\n  ;\n\n  _proto.prefixeds = function prefixeds(rule) {\n    var _this2 = this;\n\n    if (rule._autoprefixerPrefixeds) {\n      if (rule._autoprefixerPrefixeds[this.name]) {\n        return rule._autoprefixerPrefixeds;\n      }\n    } else {\n      rule._autoprefixerPrefixeds = {};\n    }\n\n    var prefixeds = {};\n\n    if (rule.selector.includes(',')) {\n      var ruleParts = list.comma(rule.selector);\n      var toProcess = ruleParts.filter(function (el) {\n        return el.includes(_this2.name);\n      });\n\n      var _loop = function _loop() {\n        var prefix = _step.value;\n        prefixeds[prefix] = toProcess.map(function (el) {\n          return _this2.replace(el, prefix);\n        }).join(', ');\n      };\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.possible()), _step; !(_step = _iterator()).done;) {\n        _loop();\n      }\n    } else {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.possible()), _step2; !(_step2 = _iterator2()).done;) {\n        var prefix = _step2.value;\n        prefixeds[prefix] = this.replace(rule.selector, prefix);\n      }\n    }\n\n    rule._autoprefixerPrefixeds[this.name] = prefixeds;\n    return rule._autoprefixerPrefixeds;\n  }\n  /**\n     * Is rule already prefixed before\n     */\n  ;\n\n  _proto.already = function already(rule, prefixeds, prefix) {\n    var index = rule.parent.index(rule) - 1;\n\n    while (index >= 0) {\n      var before = rule.parent.nodes[index];\n\n      if (before.type !== 'rule') {\n        return false;\n      }\n\n      var some = false;\n\n      for (var key in prefixeds[this.name]) {\n        var prefixed = prefixeds[this.name][key];\n\n        if (before.selector === prefixed) {\n          if (prefix === key) {\n            return true;\n          } else {\n            some = true;\n            break;\n          }\n        }\n      }\n\n      if (!some) {\n        return false;\n      }\n\n      index -= 1;\n    }\n\n    return false;\n  }\n  /**\n     * Replace selectors by prefixed one\n     */\n  ;\n\n  _proto.replace = function replace(selector, prefix) {\n    return selector.replace(this.regexp(), \"$1\" + this.prefixed(prefix));\n  }\n  /**\n     * Clone and add prefixes for at-rule\n     */\n  ;\n\n  _proto.add = function add(rule, prefix) {\n    var prefixeds = this.prefixeds(rule);\n\n    if (this.already(rule, prefixeds, prefix)) {\n      return;\n    }\n\n    var cloned = this.clone(rule, {\n      selector: prefixeds[this.name][prefix]\n    });\n    rule.parent.insertBefore(rule, cloned);\n  }\n  /**\n     * Return function to fast find prefixed selector\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldSelector(this, prefix);\n  };\n\n  return Selector;\n}(Prefixer);\n\nmodule.exports = Selector;"]},"metadata":{},"sourceType":"script"}