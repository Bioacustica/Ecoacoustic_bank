{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar OldSelector = /*#__PURE__*/function () {\n  function OldSelector(selector, prefix) {\n    this.prefix = prefix;\n    this.prefixed = selector.prefixed(this.prefix);\n    this.regexp = selector.regexp(this.prefix);\n    this.prefixeds = selector.possible().map(function (x) {\n      return [selector.prefixed(x), selector.regexp(x)];\n    });\n    this.unprefixed = selector.name;\n    this.nameRegexp = selector.regexp();\n  }\n  /**\n     * Is rule a hack without unprefixed version bottom\n     */\n\n\n  var _proto = OldSelector.prototype;\n\n  _proto.isHack = function isHack(rule) {\n    var index = rule.parent.index(rule) + 1;\n    var rules = rule.parent.nodes;\n\n    while (index < rules.length) {\n      var before = rules[index].selector;\n\n      if (!before) {\n        return true;\n      }\n\n      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {\n        return false;\n      }\n\n      var some = false;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.prefixeds), _step; !(_step = _iterator()).done;) {\n        var _step$value = _step.value,\n            string = _step$value[0],\n            regexp = _step$value[1];\n\n        if (before.includes(string) && before.match(regexp)) {\n          some = true;\n          break;\n        }\n      }\n\n      if (!some) {\n        return true;\n      }\n\n      index += 1;\n    }\n\n    return true;\n  }\n  /**\n     * Does rule contain an unnecessary prefixed selector\n     */\n  ;\n\n  _proto.check = function check(rule) {\n    if (!rule.selector.includes(this.prefixed)) {\n      return false;\n    }\n\n    if (!rule.selector.match(this.regexp)) {\n      return false;\n    }\n\n    if (this.isHack(rule)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return OldSelector;\n}();\n\nmodule.exports = OldSelector;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/old-selector.js"],"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","next","bind","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","OldSelector","selector","prefix","prefixed","regexp","prefixeds","possible","map","x","unprefixed","nameRegexp","_proto","isHack","rule","index","parent","rules","nodes","before","includes","match","some","_iterator","_step","_step$value","string","check","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar OldSelector = /*#__PURE__*/function () {\n  function OldSelector(selector, prefix) {\n    this.prefix = prefix;\n    this.prefixed = selector.prefixed(this.prefix);\n    this.regexp = selector.regexp(this.prefix);\n    this.prefixeds = selector.possible().map(function (x) {\n      return [selector.prefixed(x), selector.regexp(x)];\n    });\n    this.unprefixed = selector.name;\n    this.nameRegexp = selector.regexp();\n  }\n  /**\n     * Is rule a hack without unprefixed version bottom\n     */\n\n\n  var _proto = OldSelector.prototype;\n\n  _proto.isHack = function isHack(rule) {\n    var index = rule.parent.index(rule) + 1;\n    var rules = rule.parent.nodes;\n\n    while (index < rules.length) {\n      var before = rules[index].selector;\n\n      if (!before) {\n        return true;\n      }\n\n      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {\n        return false;\n      }\n\n      var some = false;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.prefixeds), _step; !(_step = _iterator()).done;) {\n        var _step$value = _step.value,\n            string = _step$value[0],\n            regexp = _step$value[1];\n\n        if (before.includes(string) && before.match(regexp)) {\n          some = true;\n          break;\n        }\n      }\n\n      if (!some) {\n        return true;\n      }\n\n      index += 1;\n    }\n\n    return true;\n  }\n  /**\n     * Does rule contain an unnecessary prefixed selector\n     */\n  ;\n\n  _proto.check = function check(rule) {\n    if (!rule.selector.includes(this.prefixed)) {\n      return false;\n    }\n\n    if (!rule.selector.match(this.regexp)) {\n      return false;\n    }\n\n    if (this.isHack(rule)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return OldSelector;\n}();\n\nmodule.exports = OldSelector;"]},"metadata":{},"sourceType":"script"}