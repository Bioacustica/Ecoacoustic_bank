{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Declaration = require('../declaration');\n\nvar MaskComposite = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(MaskComposite, _Declaration);\n\n  function MaskComposite() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = MaskComposite.prototype;\n  /**\n   * Prefix mask-composite for webkit\n   */\n\n  _proto.insert = function insert(decl, prefix, prefixes) {\n    var isCompositeProp = decl.prop === 'mask-composite';\n    var compositeValues;\n\n    if (isCompositeProp) {\n      compositeValues = decl.value.split(',');\n    } else {\n      compositeValues = decl.value.match(MaskComposite.regexp) || [];\n    }\n\n    compositeValues = compositeValues.map(function (el) {\n      return el.trim();\n    }).filter(function (el) {\n      return el;\n    });\n    var hasCompositeValues = compositeValues.length;\n    var compositeDecl;\n\n    if (hasCompositeValues) {\n      compositeDecl = this.clone(decl);\n      compositeDecl.value = compositeValues.map(function (value) {\n        return MaskComposite.oldValues[value] || value;\n      }).join(', ');\n\n      if (compositeValues.includes('intersect')) {\n        compositeDecl.value += ', xor';\n      }\n\n      compositeDecl.prop = prefix + 'mask-composite';\n    }\n\n    if (isCompositeProp) {\n      if (!hasCompositeValues) {\n        return undefined;\n      }\n\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n      }\n\n      return decl.parent.insertBefore(decl, compositeDecl);\n    }\n\n    var cloned = this.clone(decl);\n    cloned.prop = prefix + cloned.prop;\n\n    if (hasCompositeValues) {\n      cloned.value = cloned.value.replace(MaskComposite.regexp, '');\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    decl.parent.insertBefore(decl, cloned);\n\n    if (!hasCompositeValues) {\n      return decl;\n    }\n\n    if (this.needCascade(decl)) {\n      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    return decl.parent.insertBefore(decl, compositeDecl);\n  };\n\n  return MaskComposite;\n}(Declaration);\n\n_defineProperty(MaskComposite, \"names\", ['mask', 'mask-composite']);\n\n_defineProperty(MaskComposite, \"oldValues\", {\n  add: 'source-over',\n  substract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n});\n\n_defineProperty(MaskComposite, \"regexp\", new RegExp(\"\\\\s+(\" + Object.keys(MaskComposite.oldValues).join('|') + \")\\\\b(?!\\\\))\\\\s*(?=[,])\", 'ig'));\n\nmodule.exports = MaskComposite;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/hacks/mask-composite.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_inheritsLoose","subClass","superClass","prototype","create","constructor","_defineProperty","enumerable","writable","Declaration","require","MaskComposite","_Declaration","apply","arguments","_proto","insert","decl","prefix","prefixes","isCompositeProp","prop","compositeValues","split","match","regexp","map","el","trim","filter","hasCompositeValues","compositeDecl","clone","oldValues","join","includes","needCascade","raws","before","calcBefore","parent","insertBefore","cloned","replace","add","substract","intersect","exclude","RegExp","module","exports"],"mappings":"AAAA;;AAEA,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,QAA3B,CAAX;;AAAiD,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAAE,QAAIE,GAAG,GAAGL,IAAI,CAACG,CAAD,CAAd;AAAmB,QAAIG,KAAK,GAAGL,MAAM,CAACM,wBAAP,CAAgCR,QAAhC,EAA0CM,GAA1C,CAAZ;;AAA4D,QAAIC,KAAK,IAAIA,KAAK,CAACE,YAAf,IAA+BV,GAAG,CAACO,GAAD,CAAH,KAAaI,SAAhD,EAA2D;AAAER,MAAAA,MAAM,CAACS,cAAP,CAAsBZ,GAAtB,EAA2BO,GAA3B,EAAgCC,KAAhC;AAAyC;AAAE;;AAAC,SAAOR,GAAP;AAAa;;AAElU,SAASa,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACE,SAAT,GAAqBb,MAAM,CAACc,MAAP,CAAcF,UAAU,CAACC,SAAzB,CAArB;AAA0DF,EAAAA,QAAQ,CAACE,SAAT,CAAmBE,WAAnB,GAAiCJ,QAAjC;;AAA2Cf,EAAAA,SAAS,CAACe,QAAD,EAAWC,UAAX,CAAT;AAAkC;;AAEvL,SAASI,eAAT,CAAyBnB,GAAzB,EAA8BO,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAIP,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACS,cAAP,CAAsBZ,GAAtB,EAA2BO,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBY,MAAAA,UAAU,EAAE,IAA5B;AAAkCV,MAAAA,YAAY,EAAE,IAAhD;AAAsDW,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAErB,IAAAA,GAAG,CAACO,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOR,GAAP;AAAa;;AAEjN,IAAIsB,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIC,aAAa,GAAG,aAAa,UAAUC,YAAV,EAAwB;AACvDZ,EAAAA,cAAc,CAACW,aAAD,EAAgBC,YAAhB,CAAd;;AAEA,WAASD,aAAT,GAAyB;AACvB,WAAOC,YAAY,CAACC,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,KAAuC,IAA9C;AACD;;AAED,MAAIC,MAAM,GAAGJ,aAAa,CAACR,SAA3B;AAEA;AACF;AACA;;AACEY,EAAAA,MAAM,CAACC,MAAP,GAAgB,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwC;AACtD,QAAIC,eAAe,GAAGH,IAAI,CAACI,IAAL,KAAc,gBAApC;AACA,QAAIC,eAAJ;;AAEA,QAAIF,eAAJ,EAAqB;AACnBE,MAAAA,eAAe,GAAGL,IAAI,CAACtB,KAAL,CAAW4B,KAAX,CAAiB,GAAjB,CAAlB;AACD,KAFD,MAEO;AACLD,MAAAA,eAAe,GAAGL,IAAI,CAACtB,KAAL,CAAW6B,KAAX,CAAiBb,aAAa,CAACc,MAA/B,KAA0C,EAA5D;AACD;;AAEDH,IAAAA,eAAe,GAAGA,eAAe,CAACI,GAAhB,CAAoB,UAAUC,EAAV,EAAc;AAClD,aAAOA,EAAE,CAACC,IAAH,EAAP;AACD,KAFiB,EAEfC,MAFe,CAER,UAAUF,EAAV,EAAc;AACtB,aAAOA,EAAP;AACD,KAJiB,CAAlB;AAKA,QAAIG,kBAAkB,GAAGR,eAAe,CAAC7B,MAAzC;AACA,QAAIsC,aAAJ;;AAEA,QAAID,kBAAJ,EAAwB;AACtBC,MAAAA,aAAa,GAAG,KAAKC,KAAL,CAAWf,IAAX,CAAhB;AACAc,MAAAA,aAAa,CAACpC,KAAd,GAAsB2B,eAAe,CAACI,GAAhB,CAAoB,UAAU/B,KAAV,EAAiB;AACzD,eAAOgB,aAAa,CAACsB,SAAd,CAAwBtC,KAAxB,KAAkCA,KAAzC;AACD,OAFqB,EAEnBuC,IAFmB,CAEd,IAFc,CAAtB;;AAIA,UAAIZ,eAAe,CAACa,QAAhB,CAAyB,WAAzB,CAAJ,EAA2C;AACzCJ,QAAAA,aAAa,CAACpC,KAAd,IAAuB,OAAvB;AACD;;AAEDoC,MAAAA,aAAa,CAACV,IAAd,GAAqBH,MAAM,GAAG,gBAA9B;AACD;;AAED,QAAIE,eAAJ,EAAqB;AACnB,UAAI,CAACU,kBAAL,EAAyB;AACvB,eAAOhC,SAAP;AACD;;AAED,UAAI,KAAKsC,WAAL,CAAiBnB,IAAjB,CAAJ,EAA4B;AAC1Bc,QAAAA,aAAa,CAACM,IAAd,CAAmBC,MAAnB,GAA4B,KAAKC,UAAL,CAAgBpB,QAAhB,EAA0BF,IAA1B,EAAgCC,MAAhC,CAA5B;AACD;;AAED,aAAOD,IAAI,CAACuB,MAAL,CAAYC,YAAZ,CAAyBxB,IAAzB,EAA+Bc,aAA/B,CAAP;AACD;;AAED,QAAIW,MAAM,GAAG,KAAKV,KAAL,CAAWf,IAAX,CAAb;AACAyB,IAAAA,MAAM,CAACrB,IAAP,GAAcH,MAAM,GAAGwB,MAAM,CAACrB,IAA9B;;AAEA,QAAIS,kBAAJ,EAAwB;AACtBY,MAAAA,MAAM,CAAC/C,KAAP,GAAe+C,MAAM,CAAC/C,KAAP,CAAagD,OAAb,CAAqBhC,aAAa,CAACc,MAAnC,EAA2C,EAA3C,CAAf;AACD;;AAED,QAAI,KAAKW,WAAL,CAAiBnB,IAAjB,CAAJ,EAA4B;AAC1ByB,MAAAA,MAAM,CAACL,IAAP,CAAYC,MAAZ,GAAqB,KAAKC,UAAL,CAAgBpB,QAAhB,EAA0BF,IAA1B,EAAgCC,MAAhC,CAArB;AACD;;AAEDD,IAAAA,IAAI,CAACuB,MAAL,CAAYC,YAAZ,CAAyBxB,IAAzB,EAA+ByB,MAA/B;;AAEA,QAAI,CAACZ,kBAAL,EAAyB;AACvB,aAAOb,IAAP;AACD;;AAED,QAAI,KAAKmB,WAAL,CAAiBnB,IAAjB,CAAJ,EAA4B;AAC1Bc,MAAAA,aAAa,CAACM,IAAd,CAAmBC,MAAnB,GAA4B,KAAKC,UAAL,CAAgBpB,QAAhB,EAA0BF,IAA1B,EAAgCC,MAAhC,CAA5B;AACD;;AAED,WAAOD,IAAI,CAACuB,MAAL,CAAYC,YAAZ,CAAyBxB,IAAzB,EAA+Bc,aAA/B,CAAP;AACD,GAjED;;AAmEA,SAAOpB,aAAP;AACD,CAhFgC,CAgF/BF,WAhF+B,CAAjC;;AAkFAH,eAAe,CAACK,aAAD,EAAgB,OAAhB,EAAyB,CAAC,MAAD,EAAS,gBAAT,CAAzB,CAAf;;AAEAL,eAAe,CAACK,aAAD,EAAgB,WAAhB,EAA6B;AAC1CiC,EAAAA,GAAG,EAAE,aADqC;AAE1CC,EAAAA,SAAS,EAAE,YAF+B;AAG1CC,EAAAA,SAAS,EAAE,WAH+B;AAI1CC,EAAAA,OAAO,EAAE;AAJiC,CAA7B,CAAf;;AAOAzC,eAAe,CAACK,aAAD,EAAgB,QAAhB,EAA0B,IAAIqC,MAAJ,CAAW,UAAU1D,MAAM,CAACD,IAAP,CAAYsB,aAAa,CAACsB,SAA1B,EAAqCC,IAArC,CAA0C,GAA1C,CAAV,GAA2D,wBAAtE,EAAgG,IAAhG,CAA1B,CAAf;;AAEAe,MAAM,CAACC,OAAP,GAAiBvC,aAAjB","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Declaration = require('../declaration');\n\nvar MaskComposite = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(MaskComposite, _Declaration);\n\n  function MaskComposite() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = MaskComposite.prototype;\n\n  /**\n   * Prefix mask-composite for webkit\n   */\n  _proto.insert = function insert(decl, prefix, prefixes) {\n    var isCompositeProp = decl.prop === 'mask-composite';\n    var compositeValues;\n\n    if (isCompositeProp) {\n      compositeValues = decl.value.split(',');\n    } else {\n      compositeValues = decl.value.match(MaskComposite.regexp) || [];\n    }\n\n    compositeValues = compositeValues.map(function (el) {\n      return el.trim();\n    }).filter(function (el) {\n      return el;\n    });\n    var hasCompositeValues = compositeValues.length;\n    var compositeDecl;\n\n    if (hasCompositeValues) {\n      compositeDecl = this.clone(decl);\n      compositeDecl.value = compositeValues.map(function (value) {\n        return MaskComposite.oldValues[value] || value;\n      }).join(', ');\n\n      if (compositeValues.includes('intersect')) {\n        compositeDecl.value += ', xor';\n      }\n\n      compositeDecl.prop = prefix + 'mask-composite';\n    }\n\n    if (isCompositeProp) {\n      if (!hasCompositeValues) {\n        return undefined;\n      }\n\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n      }\n\n      return decl.parent.insertBefore(decl, compositeDecl);\n    }\n\n    var cloned = this.clone(decl);\n    cloned.prop = prefix + cloned.prop;\n\n    if (hasCompositeValues) {\n      cloned.value = cloned.value.replace(MaskComposite.regexp, '');\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    decl.parent.insertBefore(decl, cloned);\n\n    if (!hasCompositeValues) {\n      return decl;\n    }\n\n    if (this.needCascade(decl)) {\n      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    return decl.parent.insertBefore(decl, compositeDecl);\n  };\n\n  return MaskComposite;\n}(Declaration);\n\n_defineProperty(MaskComposite, \"names\", ['mask', 'mask-composite']);\n\n_defineProperty(MaskComposite, \"oldValues\", {\n  add: 'source-over',\n  substract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n});\n\n_defineProperty(MaskComposite, \"regexp\", new RegExp(\"\\\\s+(\" + Object.keys(MaskComposite.oldValues).join('|') + \")\\\\b(?!\\\\))\\\\s*(?=[,])\", 'ig'));\n\nmodule.exports = MaskComposite;"]},"metadata":{},"sourceType":"script"}