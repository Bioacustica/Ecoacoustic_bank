{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nvar vendor = require('postcss').vendor;\n\nvar Prefixer = require('./prefixer');\n\nvar OldValue = require('./old-value');\n\nvar utils = require('./utils');\n\nvar Value = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Value, _Prefixer);\n\n  function Value() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n  /**\n     * Clone decl for each prefixed values\n     */\n\n\n  Value.save = function save(prefixes, decl) {\n    var _this = this;\n\n    var prop = decl.prop;\n    var result = [];\n\n    var _loop = function _loop(prefix) {\n      var value = decl._autoprefixerValues[prefix];\n\n      if (value === decl.value) {\n        return \"continue\";\n      }\n\n      var item = void 0;\n      var propPrefix = vendor.prefix(prop);\n\n      if (propPrefix === '-pie-') {\n        return \"continue\";\n      }\n\n      if (propPrefix === prefix) {\n        item = decl.value = value;\n        result.push(item);\n        return \"continue\";\n      }\n\n      var prefixed = prefixes.prefixed(prop, prefix);\n      var rule = decl.parent;\n\n      if (!rule.every(function (i) {\n        return i.prop !== prefixed;\n      })) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var trimmed = value.replace(/\\s+/, ' ');\n      var already = rule.some(function (i) {\n        return i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed;\n      });\n\n      if (already) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var cloned = _this.clone(decl, {\n        value: value\n      });\n\n      item = decl.parent.insertBefore(decl, cloned);\n      result.push(item);\n    };\n\n    for (var prefix in decl._autoprefixerValues) {\n      var _ret = _loop(prefix);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    return result;\n  }\n  /**\n     * Is declaration need to be prefixed\n     */\n  ;\n\n  var _proto = Value.prototype;\n\n  _proto.check = function check(decl) {\n    var value = decl.value;\n\n    if (!value.includes(this.name)) {\n      return false;\n    }\n\n    return !!value.match(this.regexp());\n  }\n  /**\n     * Lazy regexp loading\n     */\n  ;\n\n  _proto.regexp = function regexp() {\n    return this.regexpCache || (this.regexpCache = utils.regexp(this.name));\n  }\n  /**\n     * Add prefix to values in string\n     */\n  ;\n\n  _proto.replace = function replace(string, prefix) {\n    return string.replace(this.regexp(), \"$1\" + prefix + \"$2\");\n  }\n  /**\n     * Get value with comments if it was not changed\n     */\n  ;\n\n  _proto.value = function value(decl) {\n    if (decl.raws.value && decl.raws.value.value === decl.value) {\n      return decl.raws.value.raw;\n    } else {\n      return decl.value;\n    }\n  }\n  /**\n     * Save values with next prefixed token\n     */\n  ;\n\n  _proto.add = function add(decl, prefix) {\n    if (!decl._autoprefixerValues) {\n      decl._autoprefixerValues = {};\n    }\n\n    var value = decl._autoprefixerValues[prefix] || this.value(decl);\n    var before;\n\n    do {\n      before = value;\n      value = this.replace(value, prefix);\n      if (value === false) return;\n    } while (value !== before);\n\n    decl._autoprefixerValues[prefix] = value;\n  }\n  /**\n     * Return function to fast find prefixed value\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldValue(this.name, prefix + this.name);\n  };\n\n  return Value;\n}(Prefixer);\n\nmodule.exports = Value;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/value.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_inheritsLoose","subClass","superClass","prototype","create","constructor","vendor","require","Prefixer","OldValue","utils","Value","_Prefixer","apply","arguments","save","prefixes","decl","_this","prop","result","_loop","prefix","_autoprefixerValues","item","propPrefix","push","prefixed","rule","parent","every","trimmed","replace","already","some","cloned","clone","insertBefore","_ret","_proto","check","includes","name","match","regexp","regexpCache","string","raws","raw","add","before","old","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar vendor = require('postcss').vendor;\n\nvar Prefixer = require('./prefixer');\n\nvar OldValue = require('./old-value');\n\nvar utils = require('./utils');\n\nvar Value = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Value, _Prefixer);\n\n  function Value() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  /**\n     * Clone decl for each prefixed values\n     */\n  Value.save = function save(prefixes, decl) {\n    var _this = this;\n\n    var prop = decl.prop;\n    var result = [];\n\n    var _loop = function _loop(prefix) {\n      var value = decl._autoprefixerValues[prefix];\n\n      if (value === decl.value) {\n        return \"continue\";\n      }\n\n      var item = void 0;\n      var propPrefix = vendor.prefix(prop);\n\n      if (propPrefix === '-pie-') {\n        return \"continue\";\n      }\n\n      if (propPrefix === prefix) {\n        item = decl.value = value;\n        result.push(item);\n        return \"continue\";\n      }\n\n      var prefixed = prefixes.prefixed(prop, prefix);\n      var rule = decl.parent;\n\n      if (!rule.every(function (i) {\n        return i.prop !== prefixed;\n      })) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var trimmed = value.replace(/\\s+/, ' ');\n      var already = rule.some(function (i) {\n        return i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed;\n      });\n\n      if (already) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var cloned = _this.clone(decl, {\n        value: value\n      });\n\n      item = decl.parent.insertBefore(decl, cloned);\n      result.push(item);\n    };\n\n    for (var prefix in decl._autoprefixerValues) {\n      var _ret = _loop(prefix);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    return result;\n  }\n  /**\n     * Is declaration need to be prefixed\n     */\n  ;\n\n  var _proto = Value.prototype;\n\n  _proto.check = function check(decl) {\n    var value = decl.value;\n\n    if (!value.includes(this.name)) {\n      return false;\n    }\n\n    return !!value.match(this.regexp());\n  }\n  /**\n     * Lazy regexp loading\n     */\n  ;\n\n  _proto.regexp = function regexp() {\n    return this.regexpCache || (this.regexpCache = utils.regexp(this.name));\n  }\n  /**\n     * Add prefix to values in string\n     */\n  ;\n\n  _proto.replace = function replace(string, prefix) {\n    return string.replace(this.regexp(), \"$1\" + prefix + \"$2\");\n  }\n  /**\n     * Get value with comments if it was not changed\n     */\n  ;\n\n  _proto.value = function value(decl) {\n    if (decl.raws.value && decl.raws.value.value === decl.value) {\n      return decl.raws.value.raw;\n    } else {\n      return decl.value;\n    }\n  }\n  /**\n     * Save values with next prefixed token\n     */\n  ;\n\n  _proto.add = function add(decl, prefix) {\n    if (!decl._autoprefixerValues) {\n      decl._autoprefixerValues = {};\n    }\n\n    var value = decl._autoprefixerValues[prefix] || this.value(decl);\n    var before;\n\n    do {\n      before = value;\n      value = this.replace(value, prefix);\n      if (value === false) return;\n    } while (value !== before);\n\n    decl._autoprefixerValues[prefix] = value;\n  }\n  /**\n     * Return function to fast find prefixed value\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldValue(this.name, prefix + this.name);\n  };\n\n  return Value;\n}(Prefixer);\n\nmodule.exports = Value;"]},"metadata":{},"sourceType":"script"}