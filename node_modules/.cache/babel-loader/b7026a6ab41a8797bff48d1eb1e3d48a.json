{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar flexSpec = require('./flex-spec');\n\nvar OldValue = require('../old-value');\n\nvar Value = require('../value');\n\nvar DisplayFlex = /*#__PURE__*/function (_Value) {\n  _inheritsLoose(DisplayFlex, _Value);\n\n  function DisplayFlex(name, prefixes) {\n    var _this;\n\n    _this = _Value.call(this, name, prefixes) || this;\n\n    if (name === 'display-flex') {\n      _this.name = 'flex';\n    }\n\n    return _this;\n  }\n  /**\n   * Faster check for flex value\n   */\n\n\n  var _proto = DisplayFlex.prototype;\n\n  _proto.check = function check(decl) {\n    return decl.prop === 'display' && decl.value === this.name;\n  }\n  /**\n   * Return value by spec\n   */\n  ;\n\n  _proto.prefixed = function prefixed(prefix) {\n    var spec, value;\n\n    var _flexSpec = flexSpec(prefix);\n\n    spec = _flexSpec[0];\n    prefix = _flexSpec[1];\n\n    if (spec === 2009) {\n      if (this.name === 'flex') {\n        value = 'box';\n      } else {\n        value = 'inline-box';\n      }\n    } else if (spec === 2012) {\n      if (this.name === 'flex') {\n        value = 'flexbox';\n      } else {\n        value = 'inline-flexbox';\n      }\n    } else if (spec === 'final') {\n      value = this.name;\n    }\n\n    return prefix + value;\n  }\n  /**\n   * Add prefix to value depend on flebox spec version\n   */\n  ;\n\n  _proto.replace = function replace(string, prefix) {\n    return this.prefixed(prefix);\n  }\n  /**\n   * Change value for old specs\n   */\n  ;\n\n  _proto.old = function old(prefix) {\n    var prefixed = this.prefixed(prefix);\n    if (!prefixed) return undefined;\n    return new OldValue(this.name, prefixed);\n  };\n\n  return DisplayFlex;\n}(Value);\n\n_defineProperty(DisplayFlex, \"names\", ['display-flex', 'inline-flex']);\n\nmodule.exports = DisplayFlex;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/hacks/display-flex.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_inheritsLoose","subClass","superClass","prototype","create","constructor","_defineProperty","enumerable","writable","flexSpec","require","OldValue","Value","DisplayFlex","_Value","name","prefixes","_this","call","_proto","check","decl","prop","prefixed","prefix","spec","_flexSpec","replace","string","old","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar flexSpec = require('./flex-spec');\n\nvar OldValue = require('../old-value');\n\nvar Value = require('../value');\n\nvar DisplayFlex = /*#__PURE__*/function (_Value) {\n  _inheritsLoose(DisplayFlex, _Value);\n\n  function DisplayFlex(name, prefixes) {\n    var _this;\n\n    _this = _Value.call(this, name, prefixes) || this;\n\n    if (name === 'display-flex') {\n      _this.name = 'flex';\n    }\n\n    return _this;\n  }\n  /**\n   * Faster check for flex value\n   */\n\n\n  var _proto = DisplayFlex.prototype;\n\n  _proto.check = function check(decl) {\n    return decl.prop === 'display' && decl.value === this.name;\n  }\n  /**\n   * Return value by spec\n   */\n  ;\n\n  _proto.prefixed = function prefixed(prefix) {\n    var spec, value;\n\n    var _flexSpec = flexSpec(prefix);\n\n    spec = _flexSpec[0];\n    prefix = _flexSpec[1];\n\n    if (spec === 2009) {\n      if (this.name === 'flex') {\n        value = 'box';\n      } else {\n        value = 'inline-box';\n      }\n    } else if (spec === 2012) {\n      if (this.name === 'flex') {\n        value = 'flexbox';\n      } else {\n        value = 'inline-flexbox';\n      }\n    } else if (spec === 'final') {\n      value = this.name;\n    }\n\n    return prefix + value;\n  }\n  /**\n   * Add prefix to value depend on flebox spec version\n   */\n  ;\n\n  _proto.replace = function replace(string, prefix) {\n    return this.prefixed(prefix);\n  }\n  /**\n   * Change value for old specs\n   */\n  ;\n\n  _proto.old = function old(prefix) {\n    var prefixed = this.prefixed(prefix);\n    if (!prefixed) return undefined;\n    return new OldValue(this.name, prefixed);\n  };\n\n  return DisplayFlex;\n}(Value);\n\n_defineProperty(DisplayFlex, \"names\", ['display-flex', 'inline-flex']);\n\nmodule.exports = DisplayFlex;"]},"metadata":{},"sourceType":"script"}