{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar list = require('postcss').list;\n\nmodule.exports = {\n  /**\n     * Throw special error, to tell beniary,\n     * that this error is from Autoprefixer.\n     */\n  error: function error(text) {\n    var err = new Error(text);\n    err.autoprefixer = true;\n    throw err;\n  },\n\n  /**\n     * Return array, that doesn’t contain duplicates.\n     */\n  uniq: function uniq(array) {\n    var filtered = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      if (!filtered.includes(i)) {\n        filtered.push(i);\n      }\n    }\n\n    return filtered;\n  },\n\n  /**\n     * Return \"-webkit-\" on \"-webkit- old\"\n     */\n  removeNote: function removeNote(string) {\n    if (!string.includes(' ')) {\n      return string;\n    }\n\n    return string.split(' ')[0];\n  },\n\n  /**\n     * Escape RegExp symbols\n     */\n  escapeRegexp: function escapeRegexp(string) {\n    return string.replace(/[$()*+-.?[\\\\\\]^{|}]/g, '\\\\$&');\n  },\n\n  /**\n     * Return regexp to check, that CSS string contain word\n     */\n  regexp: function regexp(word, escape) {\n    if (escape === void 0) {\n      escape = true;\n    }\n\n    if (escape) {\n      word = this.escapeRegexp(word);\n    }\n\n    return new RegExp(\"(^|[\\\\s,(])(\" + word + \"($|[\\\\s(,]))\", 'gi');\n  },\n\n  /**\n     * Change comma list\n     */\n  editList: function editList(value, callback) {\n    var origin = list.comma(value);\n    var changed = callback(origin, []);\n\n    if (origin === changed) {\n      return value;\n    }\n\n    var join = value.match(/,\\s*/);\n    join = join ? join[0] : ', ';\n    return changed.join(join);\n  },\n\n  /**\n     * Split the selector into parts.\n     * It returns 3 level deep array because selectors can be comma\n     * separated (1), space separated (2), and combined (3)\n     * @param {String} selector selector string\n     * @return {Array<Array<Array>>} 3 level deep array of split selector\n     * @see utils.test.js for examples\n     */\n  splitSelector: function splitSelector(selector) {\n    return list.comma(selector).map(function (i) {\n      return list.space(i).map(function (k) {\n        return k.split(/(?=\\.|#)/g);\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/utils.js"],"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","next","bind","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","list","require","module","exports","error","text","err","Error","autoprefixer","uniq","array","filtered","_iterator","_step","includes","push","removeNote","string","split","escapeRegexp","replace","regexp","word","escape","RegExp","editList","callback","origin","comma","changed","join","match","splitSelector","selector","map","space","k"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar list = require('postcss').list;\n\nmodule.exports = {\n  /**\n     * Throw special error, to tell beniary,\n     * that this error is from Autoprefixer.\n     */\n  error: function error(text) {\n    var err = new Error(text);\n    err.autoprefixer = true;\n    throw err;\n  },\n\n  /**\n     * Return array, that doesn’t contain duplicates.\n     */\n  uniq: function uniq(array) {\n    var filtered = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      if (!filtered.includes(i)) {\n        filtered.push(i);\n      }\n    }\n\n    return filtered;\n  },\n\n  /**\n     * Return \"-webkit-\" on \"-webkit- old\"\n     */\n  removeNote: function removeNote(string) {\n    if (!string.includes(' ')) {\n      return string;\n    }\n\n    return string.split(' ')[0];\n  },\n\n  /**\n     * Escape RegExp symbols\n     */\n  escapeRegexp: function escapeRegexp(string) {\n    return string.replace(/[$()*+-.?[\\\\\\]^{|}]/g, '\\\\$&');\n  },\n\n  /**\n     * Return regexp to check, that CSS string contain word\n     */\n  regexp: function regexp(word, escape) {\n    if (escape === void 0) {\n      escape = true;\n    }\n\n    if (escape) {\n      word = this.escapeRegexp(word);\n    }\n\n    return new RegExp(\"(^|[\\\\s,(])(\" + word + \"($|[\\\\s(,]))\", 'gi');\n  },\n\n  /**\n     * Change comma list\n     */\n  editList: function editList(value, callback) {\n    var origin = list.comma(value);\n    var changed = callback(origin, []);\n\n    if (origin === changed) {\n      return value;\n    }\n\n    var join = value.match(/,\\s*/);\n    join = join ? join[0] : ', ';\n    return changed.join(join);\n  },\n\n  /**\n     * Split the selector into parts.\n     * It returns 3 level deep array because selectors can be comma\n     * separated (1), space separated (2), and combined (3)\n     * @param {String} selector selector string\n     * @return {Array<Array<Array>>} 3 level deep array of split selector\n     * @see utils.test.js for examples\n     */\n  splitSelector: function splitSelector(selector) {\n    return list.comma(selector).map(function (i) {\n      return list.space(i).map(function (k) {\n        return k.split(/(?=\\.|#)/g);\n      });\n    });\n  }\n};"]},"metadata":{},"sourceType":"script"}