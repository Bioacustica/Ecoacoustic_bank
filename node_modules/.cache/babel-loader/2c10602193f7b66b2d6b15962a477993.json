{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Declaration = require('../declaration');\n\nvar BlockLogical = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(BlockLogical, _Declaration);\n\n  function BlockLogical() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = BlockLogical.prototype;\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n\n  _proto.prefixed = function prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before');\n    }\n\n    return prefix + prop.replace('-block-end', '-after');\n  }\n  /**\n   * Return property name by spec\n   */\n  ;\n\n  _proto.normalize = function normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start');\n    }\n\n    return prop.replace('-after', '-block-end');\n  };\n\n  return BlockLogical;\n}(Declaration);\n\n_defineProperty(BlockLogical, \"names\", ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after']);\n\nmodule.exports = BlockLogical;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/hacks/block-logical.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_inheritsLoose","subClass","superClass","prototype","create","constructor","_defineProperty","enumerable","writable","Declaration","require","BlockLogical","_Declaration","apply","arguments","_proto","prefixed","prop","prefix","includes","replace","normalize","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Declaration = require('../declaration');\n\nvar BlockLogical = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(BlockLogical, _Declaration);\n\n  function BlockLogical() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = BlockLogical.prototype;\n\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  _proto.prefixed = function prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before');\n    }\n\n    return prefix + prop.replace('-block-end', '-after');\n  }\n  /**\n   * Return property name by spec\n   */\n  ;\n\n  _proto.normalize = function normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start');\n    }\n\n    return prop.replace('-after', '-block-end');\n  };\n\n  return BlockLogical;\n}(Declaration);\n\n_defineProperty(BlockLogical, \"names\", ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after']);\n\nmodule.exports = BlockLogical;"]},"metadata":{},"sourceType":"script"}