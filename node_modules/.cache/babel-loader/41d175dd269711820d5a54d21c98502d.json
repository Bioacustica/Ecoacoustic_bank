{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nvar Prefixer = require('./prefixer');\n\nvar AtRule = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(AtRule, _Prefixer);\n\n  function AtRule() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  var _proto = AtRule.prototype;\n  /**\n     * Clone and add prefixes for at-rule\n     */\n\n  _proto.add = function add(rule, prefix) {\n    var prefixed = prefix + rule.name;\n    var already = rule.parent.some(function (i) {\n      return i.name === prefixed && i.params === rule.params;\n    });\n\n    if (already) {\n      return undefined;\n    }\n\n    var cloned = this.clone(rule, {\n      name: prefixed\n    });\n    return rule.parent.insertBefore(rule, cloned);\n  }\n  /**\n     * Clone node with prefixes\n     */\n  ;\n\n  _proto.process = function process(node) {\n    var parent = this.parentPrefix(node);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.prefixes), _step; !(_step = _iterator()).done;) {\n      var prefix = _step.value;\n\n      if (!parent || parent === prefix) {\n        this.add(node, prefix);\n      }\n    }\n  };\n\n  return AtRule;\n}(Prefixer);\n\nmodule.exports = AtRule;","map":{"version":3,"sources":["/bioacustica/node_modules/autoprefixer/lib/at-rule.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","done","TypeError","next","bind","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","_inheritsLoose","subClass","superClass","create","Prefixer","require","AtRule","_Prefixer","apply","arguments","_proto","add","rule","prefix","prefixed","already","parent","some","params","cloned","clone","insertBefore","process","node","parentPrefix","_iterator","prefixes","_step","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar Prefixer = require('./prefixer');\n\nvar AtRule = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(AtRule, _Prefixer);\n\n  function AtRule() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  var _proto = AtRule.prototype;\n\n  /**\n     * Clone and add prefixes for at-rule\n     */\n  _proto.add = function add(rule, prefix) {\n    var prefixed = prefix + rule.name;\n    var already = rule.parent.some(function (i) {\n      return i.name === prefixed && i.params === rule.params;\n    });\n\n    if (already) {\n      return undefined;\n    }\n\n    var cloned = this.clone(rule, {\n      name: prefixed\n    });\n    return rule.parent.insertBefore(rule, cloned);\n  }\n  /**\n     * Clone node with prefixes\n     */\n  ;\n\n  _proto.process = function process(node) {\n    var parent = this.parentPrefix(node);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.prefixes), _step; !(_step = _iterator()).done;) {\n      var prefix = _step.value;\n\n      if (!parent || parent === prefix) {\n        this.add(node, prefix);\n      }\n    }\n  };\n\n  return AtRule;\n}(Prefixer);\n\nmodule.exports = AtRule;"]},"metadata":{},"sourceType":"script"}