version: '3'
services:
  develop:
    build:
      context: .
      dockerfile: JupyterAlpine.Dockerfile
    container_name: develop
    volumes:
      - './source:/data'
    ports:
      - '8888:8888'
    restart: on-failure
  postgres:
    image: postgres
    command:
      - postgres
      - '-c'
      - log_statement=all
      - '-c'
      - log_destination=stderr
    container_name: postgres
    env_file:
      - credenciales_postgres.env
    user: root
    ports:
      - '5432:5432'
    volumes:
      - './postgres-data:/var/lib/postgresql/data'
      - './source/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql'
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - '8084:80'
    env_file:
      - credenciales_pgadmin.env
    depends_on:
      - postgres
    volumes:
      - './diagrama_erd:/var/lib/pgadmin/storage'
    user: root
  djangoweb:
    build:
      context: .
      dockerfile: Django.Dockerfile
    container_name: djangoweb
    volumes:
      - './apidev/:/code'
    ports:
      - '8000:8000'
    env_file: Django.env
    depends_on:
      - postgres
  frontend:
    build:
      context: .
      dockerfile: Node.Dockerfile
    volumes:
      - .:/bioacustica-front
    ports:
      - 3000:3000
    image: app:react
    container_name: front_container
    command: npm start
